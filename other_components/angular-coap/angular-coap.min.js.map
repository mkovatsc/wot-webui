{"version":3,"sources":["angular-coap.js"],"names":["angular","module","provider","proxyHost","this","setProxy","value","$get","$window","$log","$q","CoAPRequest","type","method","uri","async","onreadystatechange","readyState","payload","onload","onerror","coap_proxy","warn","status_map",64,"status","statusText",65,66,67,68,69,128,129,130,131,132,133,141,143,160,161,162,163,164,165,"prototype","open","setRequestHeader","abort","getAllResponseHeaders","send","processResponse","o","JSON","parse","xhr","responseText","self","error","code","XMLHttpRequest","window","jsondata","stringify","url","doCoapReq","deferred","defer","request","resolve","reject","promise","get","put","post"],"mappings":"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","file":"angular-coap.min.js","sourcesContent":["angular.module(\"coap\",[]).provider('CoAP', [\r\nfunction CoapProvider() {\r\n  var proxyHost = 'http://localhost:8080'\r\n\r\n  this.setProxy = function setProxy(value) {\r\n    proxyHost = value;\r\n  }\r\n\r\n  this.$get = ['$window', '$log', '$q',\r\n    function CoapServiceFactory($window,$log,$q) {\r\n\r\n      if ($window.coap_proxy) {\r\n        //coap.js is loaded\r\n\r\n        if (proxyHost !== $window.coap_proxy) {\r\n          $log.warn(\"coap proxy mismatch, overriding with configured\");\r\n          $window.coap_proxy = proxyHost;\r\n        }\r\n\r\n      } else {\r\n        //not loaded\r\n\r\n        $window.coap_proxy = proxyHost;\r\n\r\n        var status_map = {\r\n          64: {\r\n            status: 200,\r\n            statusText: 'OK'\r\n          },\r\n          65: {\r\n            status: 201,\r\n            statusText: 'Created'\r\n          },\r\n          66: {\r\n            status: 202,\r\n            statusText: 'Deleted'\r\n          },\r\n          67: {\r\n            status: 203,\r\n            statusText: 'Valid'\r\n          },\r\n          68: {\r\n            status: 204,\r\n            statusText: 'Changed'\r\n          },\r\n          69: {\r\n            status: 205,\r\n            statusText: 'Content'\r\n          },\r\n          128: {\r\n            status: 400,\r\n            statusText: 'Bad Request'\r\n          },\r\n          129: {\r\n            status: 401,\r\n            statusText: 'Unauthorized'\r\n          },\r\n          130: {\r\n            status: 402,\r\n            statusText: 'Bad Option'\r\n          },\r\n          131: {\r\n            status: 403,\r\n            statusText: 'Forbidden'\r\n          },\r\n          132: {\r\n            status: 404,\r\n            statusText: 'Not Found'\r\n          },\r\n          133: {\r\n            status: 405,\r\n            statusText: 'Method Not Allowed'\r\n          },\r\n          141: {\r\n            status: 413,\r\n            statusText: 'Request Entity Too Large'\r\n          },\r\n          143: {\r\n            status: 415,\r\n            statusText: 'Unsupported Content-Format'\r\n          },\r\n          160: {\r\n            status: 500,\r\n            statusText: 'Internal Server Error'\r\n          },\r\n          161: {\r\n            status: 501,\r\n            statusText: 'Not Implemented'\r\n          },\r\n          162: {\r\n            status: 502,\r\n            statusText: 'Bad Gateway'\r\n          },\r\n          163: {\r\n            status: 503,\r\n            statusText: 'Service Unavailable'\r\n          },\r\n          164: {\r\n            status: 504,\r\n            statusText: 'Gateway Timeout'\r\n          },\r\n          165: {\r\n            status: 505,\r\n            statusText: 'Proxying Not Supported'\r\n          }\r\n        };\r\n\r\n        function CoAPRequest(type) {\r\n          this.method = 'GET';\r\n          this.uri = null;\r\n          this.async = true;\r\n          this.onreadystatechange = function() {\r\n\r\n          };\r\n          this.readyState = 0;\r\n          this.payload = '';\r\n          this.onload = function() {\r\n\r\n          };\r\n          this.onerror = function() {\r\n\r\n          };\r\n\r\n        }\r\n\r\n        CoAPRequest.prototype.open = function(method, uri, async) {\r\n          this.method = method;\r\n          this.uri = uri;\r\n          this.async = async;\r\n        };\r\n\r\n        CoAPRequest.prototype.setRequestHeader = function() {\r\n\r\n        };\r\n\r\n        CoAPRequest.prototype.abort = function() {\r\n\r\n        };\r\n        CoAPRequest.prototype.getAllResponseHeaders = function() {\r\n\r\n        };\r\n\r\n        CoAPRequest.prototype.send = function(payload) {\r\n          this.payload = payload;\r\n          var self = this;\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('POST', window.coap_proxy + '/request', this.async);\r\n          xhr.setRequestHeader('Content-Type', 'application/json');\r\n          var jsondata = JSON.stringify({\r\n            'method': this.method,\r\n            'url': this.uri,\r\n            'payload': this.payload\r\n          });\r\n          xhr.onreadystatechange = function() {\r\n            self.readyState = xhr.readyState;\r\n            self.onreadystatechange();\r\n          };\r\n\r\n          function processResponse() {\r\n            var o = JSON.parse(xhr.responseText);\r\n            if ('error' in o) {\r\n              self.error = o.error;\r\n            } else {\r\n              self.error = null;\r\n              var status = (status_map[o.code] || {\r\n                status: 500,\r\n                statusText: 'Unkown Status ' + o.code\r\n              });\r\n              self.status = status.status;\r\n              self.statusText = status.statusText;\r\n              self.code = o.code;\r\n              self.responseText = o.payload;\r\n            }\r\n          }\r\n\r\n          xhr.onload = function() {\r\n            processResponse();\r\n            if (self.error) {\r\n              self.onerror();\r\n            } else {\r\n              self.onload();\r\n            }\r\n          };\r\n          xhr.onerror = function() {\r\n            self.onerror();\r\n          };\r\n          xhr.send(jsondata);\r\n          if (!this.async) {\r\n            processResponse();\r\n          }\r\n        };\r\n      }\r\n\r\n      //we should now have CoAPRequest\r\n      var self = {}\r\n\r\n      self.doCoapReq = function doCoapReq(method,uri,payload) {\r\n        var deferred = $q.defer();\r\n        var request = new CoAPRequest();\r\n        request.open(method, uri, true);\r\n\r\n        request.onload = function () {\r\n          deferred.resolve(request.responseText);\r\n        };\r\n\r\n        request.onerror = function() {\r\n          deferred.reject(request.error);\r\n        }\r\n        request.send(payload);\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      self.get = function get(uri) {\r\n        return self.doCoapReq('GET',uri);\r\n      }\r\n\r\n      self.put = function put(uri, payload) {\r\n        return self.doCoapReq('PUT',uri,payload);\r\n      }\r\n\r\n      self.post = function post(uri, payload) {\r\n          return self.doCoapReq('POST',uri,payload);\r\n      }\r\n\r\n      self.delete = function _delete(uri) {\r\n        return self.doCoapReq('DELETE',uri);\r\n      }\r\n\r\n\r\n      return self\r\n    }\r\n];\r\n\r\n}]);\r\n"],"sourceRoot":"/source/"}